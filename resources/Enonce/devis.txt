Bonjour à tous, voici des clarifications sur le devis de projet.


j'ai besoin de recevoir un courriel par équipe de projet. Ce courriel doit me parvenir avant la fin de la semaine.

Ce courriel servira de devis très simple, et contiendra les informations suivantes:

1-Les noms et matricules des participants.

2-Le titre et la description très courte de votre projet, pour que je me rappelle qui travaille sur quoi.

3-En quoi consistera la version "0.000000001-pré-alpha" de votre projet, c'est-à-dire, le petit morceau de code qui va grandir avec l'implémentation de nouvelles fonctionnalités et la refactorisation subséquente. Vous devez simplement me dire ce que votre logiciel sera capable de faire au tout début. Ceci devrait être prêt après 1 ou 2 séances de peer-programming (2 à 4h au total) MAXIMUM. Ça peut être minuscule, comme spécifier un format de fichier (à étendre) pour les données, arriver à le lire, le sauvegarder et afficher des trucs. Au minimum, une fonctionnalité de base, qui peut rouler, doit être implémentée par ce bout de code. Ce bout de code initial doit être compréhensible par chaque membre de l'équipe très rapidement, afin que chacun puisse immédiatement travailler sur le projet.

4-Une liste des ajouts prévus (fonctionnalités que vous désirez implémenter), au mieux ordonnancée s'il existe des dépendances que vous pouvez prévoir.
Cette liste peut me parvenir dans un second courriel.

Vous devriez l'avoir en main pour démarrer vos séances de programmation en paire et vous lancer dans le projet en tant qu'équipe. Sans une liste de tâches à accomplir, il est probable que certaines paires n'auront rien de précis à faire à un moment donné.
Vous n'avez pas besoin de tout implémenter dans cette liste. Prévoyez-en plus que moins. Étant donné que vous devez commencer avec une minuscule base de code, des applications des techniques de refactorisation devraient apparaître complètement naturellement.

5-Prenez un rendez-vous avec moi pour me présener votre projet dans les 2 semaines qui suivent.


CONSEILS IMPORTANTS


En tant que membre de l'équipe, une fois le projet amorcé, NE REMETTEZ PAS VOTRE IMPLICATION À PLUS TARD. Commencez en même temps que les autres, SVP. Si vous n'agissez pas ainsi, vous allez finir vos jours à réusiner du code que vous ne comprenez pas pour rien, après que tout le monde ait fait ses heures. Participez tôt, participez souvent, suivez le groupe.

Le but de l'exercice est d'expérimenter le développement incrémentiel d'un petit bout de logiciel, si vous ne participez pas dès le début, VOUS PASSEZ COMPLÈTEMENT À CÔTÉ.


Si vous avez une base de code existante, il est extrêmement important que chaque équipier(e) soit familiarisé avec au tout début. Ceci peut être réalisé par une présentation à l'équipe avant de démarrer (une réunion initiale pour établir la liste des tâches est nécessaire anyway), ou bien, par la première séance de peer-programming de chaque personne.
Si une personne possède plus d'expertise sur le code de base, alors cette personne devrait faire les premières séances de peer programming avec 1 ou 2 personnes, qui pourront ensuite répandre les connaissances sur le projet rapidement et ainsi s'assurer que le code a vraiment une appartenance collective.
Méfiez-vous énormément des gros bouts de code pour la version initiale (genre 1 personne donne un gros coup en solo pour démarrer le projet et crée une base de code qu'il est seul à pouvoir supporter). Un mauvais choix dans le démarrage peut complètement exclure plusieurs coéquipiers.
Chaque coéquipier devrait appliquer des modifications au code très tôt. Il n'est pas acceptable que vous commenciez vos séances de peer programming quand la plupart des gens ont déjà mis la moitié de leurs heures!
Si vous faites cela, la courbe d'apprentissage du code sera trop à pic et vous n'allez pas être productifs.




------------Dates pour démos et rapports----------

Les démonstrations peuvent être faites par 1 seule personne par équipe. Elles servent à me montrer l'ensemble de votre projet. Garder la version initiale pour me montrer le chemin qui a été parcouru est une bonne idée.

Les démonstrations ET les rapports d'équipe doivent idéalement me parvenir avant la date de clôture de la session (voir le calendrier et le plan de cours). Comme vous avez des examens cette semaine-là, il serait sage d'avoir terminé bien avant. Vous pouvez cependant quand-même remettre ce rapport et faire la démo AU PLUS TARD durant la semaine suivante, si c'est possible logistiquement pour vous.


J'accepterai les rapports individuels après les examens, si nécessaire, AU PLUS TARD 3 jours après le lundi suivant la semaine d'examens.
Gardez en tête que je dois remettre les cotes finales peu après. 


